var DOM_o = Object.create( null )



DOM_o.rootVar__s = var_s => window.getComputedStyle( document.documentElement ).getPropertyValue( var_s ) || ''



DOM_o.rootVar__v = ( var_s, val_s ) => document.documentElement.style.setProperty( var_s, val_s )



DOM_o.eval__v = code_s => code_s && (new Function( code_s ))()



DOM_o.adopt__v =
( adopter_e, adopted_e, callback_f ) =>
{
  adopted_e.addEventListener('load',
    () =>
    {
      adopter_e.appendChild( document.adoptNode( ( adopted_e.contentDocument.body||adopted_e.contentDocument ).children[0] ) )
      adopted_e.remove()
      callback_f && callback_f( adopter_e )
    } )
}



DOM_o.adoptFrame__v =
( adopt_e, callback_f ) =>
{
  const iframe_e = adopt_e.querySelector( 'iframe' )
  if ( !iframe_e ) return
  //>
  DOM_o.adopt__v( adopt_e, iframe_e, callback_f)
  iframe_e.src = adopt_e.getAttribute( 'data-src' ) + '.html'
}


/**
 * HTML:
 * <ol data--="selector">
 *   <li>primo</li>
 * </ol>
 * JS:
 * DOM_o.listReverse__v( '[data--="["selector"]' )
 * 
 */
DOM_o.listReverse__v =
selector_s =>
{
  const nodes_a = Array.prototype.slice.call(document.querySelectorAll( `${selector_s} li` ))
  nodes_a && nodes_a.forEach( node_e => node_e.parentNode.insertBefore( node_e, node_e.parentNode.firstChild ) )
}



DOM_o.scroll__v =
bottom_b =>
{
  const options_o =
    {
      top: bottom_b ? document.querySelector( 'body' ).offsetHeight : 0,
      left: 0,
      behavior: 'smooth'
    }
  window.scroll( options_o )
}



/**
 * @param {*} src_s 
 * <link href="href_s" as="style" rel="preload">
 */
/* //!!!!  NOT USED: Firefox not implemented !!!!
DOM_o.preloadCSS__v =
( src_s, id_s='' ) =>
{
  link_e = document.createElement( 'link' )
  if ( id_s ) link_e.id = id_s
  link_e.href = src_s
  link_e.as = 'style'
  link_e.rel = 'preload'
  link_e.addEventListener( 'load', () => link_e.rel = 'stylesheet' )
}
*/



/**
 * @param {*} src_s
 * @param {*} id_s
 * remove script node if already loaded
 * and make a reload to execute once more
 * TODO: avoid that reload
 */
DOM_o.loadJS__v =
( src_s, id_s ) =>
{
  let script_e = document.querySelector( `#${id_s}` )
  script_e && script_e.parentNode.removeChild( script_e )    //: avoid duplicate
  script_e = document.createElement( 'script' )
  if ( id_s ) script_e.id = id_s
  document.body.appendChild( script_e )
  script_e.src = src_s
}



/**
 * Load/execute a css link or js script element
 * then remove ID to disable another execution
 * more efficient than removing it
 */

DOM_o.enableAsset__v =
( id_s, callback_f ) =>
{
  const asset_e = document.querySelector( `#${id_s}` )
  if ( asset_e )
  {
    callback_f( asset_e )
    asset_e.removeAttribute( 'id' )
  }
}



/**
 * Load a stylesheet
 * @param {*} id_s 
 */
DOM_o.enableLink__v =
id_s =>
{
  DOM_o.enableAsset__v( id_s,
    link_e =>
    {
      link_e.media = 'all'
      link_e.removeAttribute( 'disabled' )
    } )
}



/**
 * Load (when load_b is true) or eval a script:
 * @param {*} id_s 
 */
DOM_o.enableScript__v =
( id_s, load_b=false ) =>
{
  DOM_o.enableAsset__v( id_s,
    var_e =>
    DOM_o.eval__v( load_b ? `DOM_o.loadJS__v( 'http://127.0.0.1:8080/assets/scripts/js/${id_s}.min.js', '${id_s}' )` : var_e.innerHTML ) )
}
var SERVICE_o = Object.create( null )



/**
 * Service worker registration
 */

SERVICE_o.init__v = url_s =>
{
  const REGISTRATION_s = 'ServiceWorker registration'
  //-- const SUCCESS_s = 'successful'
  const FAILURE_s = 'failed'
  
  navigator.serviceWorker.register( url_s )
    .then( null,    //-- .then( registration => console.log(  `${REGISTRATION_s} ${SUCCESS_s} [scope: ${registration.scope}]` ),
      error_o => console.log( `${REGISTRATION_s} ${FAILURE_s} [error: ${error_o}]` ) )
}
class KVIdb
{
  //idb_o
  //ready_o



  constructor ( db_s='kv_db', store_s='kv_store', version_n=1 )
  {
    this.idb_o     = null
    this.ready_o   = null
    this.idb_s     = db_s
    this.store_s   = store_s
    this.version_n = version_n

    this.init__v()
  }



  init__v ()
  {
    this.ready_o = new Promise( ( resolve, reject ) =>
    {
      const open_o = window.indexedDB.open( this.idb_s, this.version_n )

      open_o.onupgradeneeded = request_o => 
      {
        this.idb_o = request_o.target.result
        this.idb_o.createObjectStore( this.store_s )
      }

      open_o.onsuccess = request_o =>
      {
        this.idb_o = request_o.target.result
        resolve( request_o.target.result )    //: only to complete: in transactions, we use this.idb_o not result
      }

      open_o.onerror = request_o =>  reject( request_o.target.error )
    })
  }



  store__o ( mode_s='readonly' )
  {
    return this.idb_o
      .transaction( [ this.store_s ], mode_s )
      .objectStore( this.store_s )
  }



  set__v ( key_s, value_ )
  {
    return this.ready_o
      .then( () =>
      {
        return new Promise( ( resolve, reject ) =>
        {
          const set_o = this.store__o( 'readwrite' ).put( value_, key_s )

          set_o.onsuccess = resolve    //: nothing to do

          set_o.onerror = reject
        })
      })
  }



  update__v ( key_s, property, value_ )
  {
    return this.ready_o
      .then( () =>
      {
        return new Promise( ( resolve, reject ) =>
        {
          const store_o = this.store__o( 'readwrite' )
          const get_o = store_o.get( key_s )

          get_o.onsuccess = () =>
          {
            const item_o = get_o.result
            item_o[property] = value_
            const put_o = store_o.put( item_o, key_s )

            put_o.onsuccess = resolve
            
            put_o.onerror = reject
          }
          get_o.onerror = reject
        })
      })
  }



  walk__v ( callback_f )
  {
    return this.ready_o
      .then( () => 
      {
        return new Promise( ( resolve, reject ) =>
        {
          const walk_o = this.store__o().openCursor()
          walk_o.onsuccess = request_o =>
          {
            let cursor_o = request_o.target.result
            if ( cursor_o )
            {
              callback_f( cursor_o.key, cursor_o.value )
              cursor_o.continue()
            }
            else resolve()
          }
  
          walk_o.onerror = reject
        })
      })
  }



  get__ ( key_s )    //: anytyped value_
  {
    return this.ready_o
      .then( () => 
      {
        return new Promise( ( resolve, reject ) =>
        {
          const get_o = this.store__o().get( key_s )

          get_o.onsuccess = request_o => resolve( request_o.target.result )

          get_o.onerror = reject
        })
      })
  }



  key__b ( key_s )    //: return 1 for true : 0 for false
  {
    return this.ready_o
      .then( () => 
      {
        return new Promise( ( resolve, reject ) =>
        {
          const key_o = this.store__o().count( key_s )

          key_o.onsuccess = request_o => resolve( request_o.target.result )

          key_o.onerror = reject
        })
      })
  }



  last__ ()
  {
    return this.ready_o
      .then( () => 
      {
        return new Promise( ( resolve, reject ) =>
        {
          const last_o = this.store__o( 'readwrite' ).openCursor( null, 'prev' )

          last_o.onsuccess = request_o =>
          {
            if ( request_o.target.result ) resolve( request_o.target.result.value )
          }

          last_o.onerror = reject
        })
      })
  }



  deleteAll__v ( callback_f )
  {
    return this.ready_o
      .then( () => 
      {
        return new Promise( ( resolve, reject ) =>
        {
          const store_o = this.store__o( 'readwrite' )
          const delete_o = store.openCursor()

          delete_o.onsuccess = request_o =>
          {
            let cursor_o = request_o.target.result
            let item_o
            if ( cursor_o )
            {
              item_o = cursor_o.value
              if ( callback_f( item_o ) ) store_o.delete( cursor_o.key )
              cursor_o.continue()
            }
            else resolve
          }
  
          delete_o.onerror = reject
        })
      })
  }



  delete__v ( key_s )
  {
    return this.ready_o
      .then( () =>
      {
        return new Promise( ( resolve, reject ) =>
        {
          const delete_o = this.store__o( 'readwrite' ).delete( key_s )

          delete_o.onsuccess = resolve    //: nothing to do

          delete_o.onerror = reject
        })
      })
  }



  clear__v ()
  {
    return this.ready_o
      .then( () =>
      {
        return new Promise( ( resolve, reject ) =>
        {
          const clear_o = this.store__o( 'readwrite' ).clear()

          clear_o.onsuccess = resolve    //: nothing to do

          clear_o.onerror = reject
        })
      })
  }


  
  deleteIDB__v ()
  {
    window.indexedDB.deleteDatabase( this.idb_s )
  }
}var SKIN_o = Object.create( null )



//> Open IndexedDB
//> to store UI base color + light/dark mode
SKIN_o.idb_o = new KVIdb( 'typexjs_idb', 'typexjs_store', )



SKIN_o.hueBase__v = hue_n =>    //: if page load, mode_n undefined (no parameter)
{
  SKIN_o.idb_o.get__( 'hue_base' )
    .then( current_n =>
    {
      if ( hue_n === undefined ) hue_n = current_n || +'210'  //: at page load only
      SKIN_o.idb_o.set__v( 'hue_base', hue_n )
      DOM_o.rootVar__v( '--c_hue_base', hue_n )
      //-- console.log( `Base hue has been set to: ${hue_n}` )
    } )
}



SKIN_o.lumMode__v = mode_n =>    //: if page load, mode_n undefined (no parameter)
{
  SKIN_o.idb_o.get__( 'lum_mode' )
    .then( current_n =>
    {
      if ( mode_n === undefined ) mode_n = current_n || +'1'
      SKIN_o.idb_o.set__v( 'lum_mode', mode_n )
      DOM_o.rootVar__v( '--lum_mode', mode_n )
      //-- console.log( `Luminosity mode has been set to: ${mode_n} ${mode_n > 0 ?  '(LIGHT)' : '(DARK)'} ` )
    } )
}

var PERF_o = Object.create( null )





//> create the performance script
//> show/hide the performance block
PERF_o.init__v = () =>
{
  const perf_e = document.querySelector( '[data--="performance"]' )
  if ( !perf_e.hasChildNodes() )
  {
    const link_e = document.createElement( 'link' )
    link_e.rel = 'stylesheet'
    link_e.href = 'http://127.0.0.1:8080/assets/styles/css/performance.min.css'
    perf_e.appendChild( link_e )

    const script_e = document.createElement( 'script' )
    script_e.setAttribute( 'data--', 'script_performance' )
    //?? script_e.setAttribute( 'async', true )
    perf_e.appendChild( script_e )
    script_e.src = 'http://127.0.0.1:8080/assets/scripts/js/performance.min.js'
  }
  perf_e.classList.toggle( 'retract' )
}

var EVENT_o = Object.create( null )



EVENT_o.init_o =
{
  note_b: false,    // NOTE_o
}



/**
 * Register Service worker
 */

EVENT_o.service__v =
() =>
{
  if ( 'serviceWorker' in navigator )
  {
    window.addEventListener( 'load', SERVICE_o.init__v( 'http://127.0.0.1:8080/service_worker.min.js' ) )
  }
}



/**
 * Change UI base color + light/dark mode
 */

EVENT_o.skin__v =
() =>
{
  //: Open IndexedDB
  //: to store UI base color + light/dark mode
  SKIN_o.hueBase__v()
  SKIN_o.lumMode__v()

  const header_e = document.querySelector( '[data--="band_title"]' )
  header_e.addEventListener('click', click_o =>
    {
      const atX_n = click_o.clientX - header_e.getBoundingClientRect().left
      const width_n = header_e.offsetWidth
      const hue_n = ~~( ( atX_n / width_n ) * 360 )
      SKIN_o.hueBase__v( hue_n )
      
      const atY_n = click_o.clientY - header_e.getBoundingClientRect().top
      const height_n = header_e.offsetHeight
      const mode_n = atY_n > ( height_n * 0.5 ) ? -1 : 1
      SKIN_o.lumMode__v( mode_n )
    } )
}


/**
 * Create slots to load
 */
EVENT_o.slots__v =
() =>
{
  for ( const tag_e of document.querySelectorAll( `[${'data-slot'}]` ) )
  {
    tag_e.addEventListener( 'click',
    () =>
    {
      const slot_s = tag_e.getAttribute( 'data-slot' )
      let section_e = document.querySelector( `section[data-slot="${slot_s}"]` )
      if ( section_e ) return void section_e.classList.toggle( 'unseen' )
      //>
//.......................
performance.mark( 'EVENT_o.slots__v:start' )
//.......................
      section_e = document.createElement( 'section' )
      section_e.setAttribute( 'data-slot', slot_s )
      let href_s = window.location.href
      if ( href_s === 'http://127.0.0.1:8080/' ) href_s += 'index.html'    //: if site index, 'index.html' could have been removed
      section_e.setAttribute( 'data-src', href_s.replace( '.html', `_${slot_s}` ) )
      const iframe_e = document.createElement( 'iframe' )
      section_e.appendChild( iframe_e )
      tag_e.after( section_e )
      DOM_o.adoptFrame__v( section_e, () => DOM_o.enableScript__v( 'note', true ) )
//.......................
performance.mark( 'EVENT_o.slots__v:end' )
//.......................
    } )
  }
}



/**
 * Page link click+hover handler
 * to show menu or go to another page
*/

EVENT_o.navigation__v =
() =>
{
  const pageNav_e = document.querySelector( '[data--="page_nav"]' )
  if ( !pageNav_e ) return
  //>
  pageNav_e.addEventListener('click',
    click_o => 
    {
      const nav_e = click_o.target.closest('BUTTON')
      if ( !nav_e ) return
      //>
      let nav_s = nav_e.getAttribute( 'data--' )
      switch ( nav_s )
      {
        case ( 'nav_menu' ) : return void EVENT_o.menu__v()
        case ( 'nav_top' ) :
        case ( 'nav_bottom' ) : return void DOM_o.scroll__v( nav_s === 'nav_bottom' )
        case ( 'nav_previous' ) :
        case ( 'nav_next' ) :
        {
          if ( document.querySelector( `[data--="menu_iframe"]` ) ) return  //: menu not yet loaded
          const http_s = LINK_PAGE_o.url__s( nav_s )
          if ( http_s ) window.location = http_s
        }
      }
    } )

  document.querySelectorAll( '[data--="page_nav"] > button' )
    .forEach( nav_e =>
    {
      switch ( nav_e.getAttribute( 'data--' ) )
      {
        case 'nav_top' :
        case 'nav_bottom' :
        case 'nav_menu' : return
      }
      //>
      ; [ 'mouseenter', 'mouseleave' ]
        .forEach( event_s => nav_e.addEventListener( event_s,
          mouse_o =>
          {
            if ( document.querySelector( `[data--="menu_iframe"]` ) ) return  //: menu not yet loaded
            //>
            LINK_PAGE_o.near__v( event_s, mouse_o.currentTarget )
          } ) )
  } )
    
}




/**
 * Scroll progress handler
*/

EVENT_o.scroll__v = () =>
{
  const doc_e      = document.documentElement
  const body_e     = document.body
  const top_s      = 'scrollTop'
  const height_s   = 'scrollHeight'
  const progress_e = document.querySelector('[data--=page_scroll]')

  const scroll__n = () => ( doc_e[top_s] || body_e[top_s] ) /
    ( (doc_e[height_s] || body_e[height_s] ) - doc_e.clientHeight ) * 100

  const progress__v = () => progress_e.style.setProperty('--scroll', `${scroll__n()}%`)  
  
  document.addEventListener( 'scroll', progress__v )
}
EVENT_o.scroll__v()



EVENT_o.menu__v =
() =>
{
  if ( document.querySelector( `[data--="menu"]` ) ) return void MENU_o.toggle__v()  //: menu already loaded
  //>
  //.......................
  performance.mark( 'EVENT_o.menu__v:start' )
  //.......................
  const menu_e = document.querySelector( '[data-src="http://127.0.0.1:8080/menu"]' )
  const iframe_e = document.createElement( 'iframe' )
  iframe_e.setAttribute( 'data--', 'menu_iframe' )
  menu_e.appendChild( iframe_e )

  DOM_o.adoptFrame__v( menu_e, () =>
    {
      [ 'note',
        'menu'].forEach( load_s => DOM_o.enableScript__v( load_s, true ) )
    } )

  //..........................
  performance.mark( 'EVENT_o.menu__v:end' )
  //..........................
}



/**
 * Comment visibility click handler
 * to show/hide comment
 */

EVENT_o.comment__v =
() =>
{
  const switch_e = document.querySelector( '[data--="comment_visibility"]' )
  if ( switch_e ) switch_e.addEventListener('click',
    click_o =>
    document.querySelector( '[data--="gh_issue"]' ).classList.toggle( 'retract' ) )
}



/**
 * Performance visibility click handler
 * to show/hide performance
 */

EVENT_o.performance__v =
() =>
{
  const switch_e = document.querySelector( '[data--="perf_visibility"]' )
  if ( switch_e ) switch_e.addEventListener('click', click_o => PERF_o.init__v() )
}


void function ()
{
  //XX const body_e =   document.getElementsByTagName( 'body')[0]
  //XX body_e.classList.add( 'fade_in' )
  //XX body_e.classList.remove( 'fade' )
  ;[ 
    'service',
    'skin',
    'slots',
    'navigation',
    'performance',
    'comment',
  ].forEach( method_s => EVENT_o[`${method_s}__v`]() )
} ()
